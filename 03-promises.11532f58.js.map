{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SA8BA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EACEM,EAAAZ,GAASa,OAAOC,QACd,uBAAqBX,QAAiBC,QAI1CG,EACEK,EAAAZ,GAASa,OAAOE,QACd,sBAAoBZ,QAAeC,OAAW,GAInDA,EAAM,G,EA7CA,CACXY,KAAMC,SAASC,cAAc,WAG1BF,KAAKG,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAMC,iBAEN,MAAMC,EAAW,IAAIC,SAASH,EAAMI,eAC9BC,EAAa,GAEnB,IAAK,MAAOC,EAAKC,KAAUL,EAASM,UAClCH,EAAWC,GAAOG,OAAOF,GAG3B,IAAIG,OAAEA,EAAMC,KAAEA,EAAI3B,MAAEA,GAAUqB,EAE9B,IAAK,IAAItB,EAAW,EAAGA,GAAY2B,EAAQ3B,IAAY,CAErDD,EAAc4B,EADC1B,EAAQ2B,EAAO5B,GAE3B6B,KAAK,C,SAAE7B,E,MAAUC,IACjB6B,MAAM,C,SAAE9B,E,MAAUC,G,CAGvBgB,EAAMI,cAAcU,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n};\n\nrefs.form.addEventListener('submit', onSubmitForm);\n\nfunction onSubmitForm(event) {\n  event.preventDefault();\n\n  const formData = new FormData(event.currentTarget);\n  const dataParams = {};\n\n  for (const [key, value] of formData.entries()) {\n    dataParams[key] = Number(value);\n  }\n\n  let { amount, step, delay } = dataParams;\n\n  for (let position = 1; position <= amount; position++) {\n    const delays = delay + step * position;\n    createPromise(amount, delays)\n      .then({ position, delay })\n      .catch({ position, delay });\n  }\n\n  event.currentTarget.reset();\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(\n          Notiflix.Notify.success(\n            `✅ Fulfilled promise ${position} in ${delay}ms`\n          )\n        );\n      } else {\n        reject(\n          Notiflix.Notify.failure(\n            `❌ Rejected promise ${position} in ${delay}ms`\n          )\n        );\n      }\n    }, delay);\n  });\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$parcel$interopDefault","Notify","success","failure","form","document","querySelector","addEventListener","event","preventDefault","formData","FormData","currentTarget","dataParams","key","value","entries","Number","amount","step","then","catch","reset"],"version":3,"file":"03-promises.11532f58.js.map"}